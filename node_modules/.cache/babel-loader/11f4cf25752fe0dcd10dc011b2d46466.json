{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web_Project\\\\client\\\\src\\\\components\\\\Home2.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Card, Form, Button, Container, Row, Col, Badge, Alert, Tab, ListGroup, Accordion, Modal } from 'react-bootstrap';\nimport React, { useState, useEffect } from 'react'; //ref to Todo.js -> ListsComponent\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProjectsList = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"ProjctsGrid\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        className: \"g-4\",\n        children: Array.from({\n          length: 4\n        }).map((_, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Project Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"Project Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                children: \"Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProjectsList;\n\nconst ProjectDetails = () => {\n  _s();\n\n  const EmptyProjct = {\n    text: \"\",\n    desc: \"\",\n    date: \"1111-11-11\"\n  };\n  const [selectedProject, setSelectedProject] = useState(EmptyProjct);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  showTaskDetails = handleShow;\n  _setSelectedTask = setSelectedTask;\n  _selectedTask = selectedTask;\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const title = form.task.value;\n    const desc = form.taskdesc.value;\n    const date = form.date.value;\n    selectedTask.text = title;\n    selectedTask.desc = desc;\n    selectedTask.date = date;\n\n    _setTaskName(title);\n\n    _updateData();\n\n    setShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Task Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              defaultValue: selectedTask.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"taskdesc\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              defaultValue: selectedTask.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Due Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              defaultValue: selectedTask.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProjectDetails, \"5nNrb7ZGd6FjnI5mKhzkd1WQEH0=\");\n\n_c2 = ProjectDetails;\n\nconst Home = ({\n  userName\n}) => {\n  _s2();\n\n  const [m_userName, setUserName] = useState(userName);\n\n  const addProject = () => {\n    setUserName(\"banana\");\n  }; //read projcets of user\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"labelStyle\",\n        children: [\"Hello, \", m_userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"projectName\",\n          className: \"labelStyle\",\n          children: \"My Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          onClick: addProject,\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProjectsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Home, \"KqbhOSS7Y02myeRUINXJiEygDY0=\");\n\n_c3 = Home;\nexport default Home;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProjectsList\");\n$RefreshReg$(_c2, \"ProjectDetails\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"sources":["C:/Web_Project/client/src/components/Home2.js"],"names":["Card","Form","Button","Container","Row","Col","Badge","Alert","Tab","ListGroup","Accordion","Modal","React","useState","useEffect","ProjectsList","Array","from","length","map","_","idx","ProjectDetails","EmptyProjct","text","desc","date","selectedProject","setSelectedProject","show","setShow","handleClose","handleShow","showTaskDetails","_setSelectedTask","setSelectedTask","_selectedTask","selectedTask","onSubmit","event","preventDefault","form","currentTarget","title","task","value","taskdesc","_setTaskName","_updateData","Home","userName","m_userName","setUserName","addProject"],"mappings":"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","sourcesContent":["import { Card, Form, Button, Container, Row, Col, Badge, Alert, Tab, ListGroup, Accordion, Modal } from 'react-bootstrap'\r\nimport React, { useState, useEffect } from 'react';\r\n//ref to Todo.js -> ListsComponent\r\nconst ProjectsList = () => {\r\n    return (\r\n        <Container className='ProjctsGrid'>\r\n            <Col>\r\n                <Row xs={1} md={2} className=\"g-4\">\r\n                {Array.from({ length: 4 }).map((_, idx) => (\r\n                    <Col>\r\n                    <Card >\r\n                    <Card.Body>\r\n                        <Card.Title>Project Title</Card.Title>\r\n                        <Card.Text>\r\n                            Project Description\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\">Open</Button>\r\n                    </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                ))}\r\n                </Row>\r\n            </Col>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst ProjectDetails = () => {\r\n    const EmptyProjct = { text: \"\", desc: \"\", date: \"1111-11-11\" }\r\n    const [selectedProject, setSelectedProject] = useState(EmptyProjct);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    showTaskDetails = handleShow\r\n    _setSelectedTask = setSelectedTask\r\n    _selectedTask = selectedTask\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget\r\n        const title = form.task.value\r\n        const desc = form.taskdesc.value\r\n        const date = form.date.value\r\n        selectedTask.text = title\r\n        selectedTask.desc = desc\r\n        selectedTask.date = date\r\n        _setTaskName(title)\r\n        _updateData()\r\n        setShow(false)\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        <>\r\n        {/* Model is pop-up for editing task details */}\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form onSubmit={onSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Task Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form.Group controlId=\"task\">\r\n                            <Form.Label>Task</Form.Label>\r\n                            <Form.Control type=\"text\" defaultValue={selectedTask.text} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"taskdesc\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} defaultValue={selectedTask.desc} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"date\">\r\n                            <Form.Label> Due Date:</Form.Label>\r\n                            <Form.Control type=\"date\" defaultValue={selectedTask.date} />\r\n                        </Form.Group>\r\n\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                        </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Home = ({ userName }) => {\r\n    const [m_userName, setUserName] = useState(userName)\r\n    const addProject = () => \r\n    {\r\n        setUserName(\"banana\");\r\n    }\r\n    //read projcets of user\r\n    return (    \r\n        <div >\r\n        <div className=\"home\">\r\n            <div className=\"labelStyle\">Hello, {m_userName}</div>\r\n        </div>\r\n        <div className=\"center\">\r\n            <div>\r\n                <div id=\"projectName\" className=\"labelStyle\">My Projects</div>\r\n                <Button variant=\"outline-success\" onClick={addProject}>Add Project</Button>\r\n                <hr></hr>\r\n                \r\n            </div>\r\n         \r\n            <ProjectsList ></ProjectsList>\r\n        </div>\r\n        </div>     \r\n    )}\r\nexport default Home"]},"metadata":{},"sourceType":"module"}