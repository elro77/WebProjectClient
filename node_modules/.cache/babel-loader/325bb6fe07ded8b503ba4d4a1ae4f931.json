{"ast":null,"code":"import axios from 'axios';\nimport { SetUser } from '../components/Navigator';\nimport { global_setData } from '../components/Todo';\nconst baseUrl = 'http://localhost:3001';\nexport let data = {\n  username: \"\",\n  password: \"\",\n  lists: \"[]\"\n};\nexport function signIn(username, password, onSuccess, onFailure) {\n  data = {\n    username: \"\",\n    password: \"\",\n    lists: \"[]\"\n  };\n  const request = axios.get(`${baseUrl}/api/login/:${username}/:${password}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure();\n      SetUser({\n        name: \"guest\",\n        isLog: false\n      });\n    } else {\n      console.log(\"after getting user projects:\");\n      console.log(response.data); // console.log(response.data.userName)\n      // console.log(response.data.userProjectsJSON)\n\n      onSuccess(response.data.userName, response.data.userProjectsJSON);\n      SetUser({\n        name: username,\n        isLog: true\n      });\n    }\n  }).catch(error => console.log(error));\n}\nexport function register(username, password, onSuccess, onFailure) {\n  const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure();\n    } else {\n      SetUser({\n        name: username,\n        isLog: true\n      });\n      onSuccess(username);\n    }\n  }).catch(error => console.log(error));\n}\nexport function addProject(userName, projectName, projectDesc, projectsList, onSuccess, onFailure) {\n  console.log(\"serverCom addProjectToDB\"); //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\n\n  const request = axios.post(`${baseUrl}/api/addProject/:${userName}/:${projectName}/:${projectDesc}/:${projectsList}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure();\n    } else {\n      console.log(response.data);\n      onSuccess(response.data);\n    }\n  }).catch(error => console.log(error));\n}\nexport function addMember(userName, projectName, premission, id, onSuccess, onFailure) {\n  console.log(\"serverCom addMemberToDB\"); //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\n\n  const request = axios.post(`${baseUrl}/api/addMember/:${userName}/:${projectName}/:${premission}/:${id}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(\"sc addMember\");\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure(\"There was an error while adding member\");\n    } else {\n      if (response.data.passed === false) {\n        onFailure(response.data.msg);\n      } else {\n        onSuccess(userName, premission, response.data.msg);\n      }\n    }\n  }).catch(error => console.log(error));\n}\nexport function addIssue(projectID, issueID, desc, dueDate, assignedBy, assignedTo, status, onSuccess, onFailure) {\n  console.log(\"serverCom addIssue\"); //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\n\n  const request = axios.post(`${baseUrl}/api/addIssue/:${projectID}/:${issueID}/:${desc}/:${dueDate}/:${assignedBy}/:${assignedTo}/:${status}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(\"sc addIssue\");\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure(\"There was an error while adding member\");\n    } else {\n      if (response.data.passed === false) {\n        onFailure(response.data.msg);\n      } else {\n        onSuccess(response.data);\n      }\n    }\n  }).catch(error => console.log(error));\n}\nexport function updateIssueStatus(projectID, issueID, finalStatus, onSuccess, onFailure) {\n  console.log(\"serverCom updateIssue\"); //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\n\n  const request = axios.post(`${baseUrl}/api/updateIssueStatus/:${projectID}/:${issueID}/:${finalStatus}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(\"sc addIssue\");\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure(\"There was an error while updating issue status\");\n    } else {\n      if (response.data.passed === false) {\n        onFailure(response.data);\n      } else {\n        onSuccess(response.data);\n      }\n    }\n  }).catch(error => console.log(error));\n}\nexport function update(user, onSuccess, onFailure) {\n  console.log(\"update\");\n  const request = axios.put(`${baseUrl}/api/update/user`, JSON.stringify(user), {\n    headers: {\n      // Overwrite Axios's automatically set Content-Type\n      'Content-Type': 'application/json'\n    }\n  });\n  return request.then(response => {\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure();\n    } else {\n      onSuccess();\n    }\n  }).catch(error => console.log(error));\n}","map":{"version":3,"sources":["C:/Web_Project/client/src/services/serverCom.js"],"names":["axios","SetUser","global_setData","baseUrl","data","username","password","lists","signIn","onSuccess","onFailure","request","get","crossdomain","then","response","console","log","name","isLog","userName","userProjectsJSON","catch","error","register","post","addProject","projectName","projectDesc","projectsList","addMember","premission","id","passed","msg","addIssue","projectID","issueID","desc","dueDate","assignedBy","assignedTo","status","updateIssueStatus","finalStatus","update","user","put","JSON","stringify","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,OAAR,QAAsB,yBAAtB;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,OAAO,IAAIC,IAAI,GAAC;AAACC,EAAAA,QAAQ,EAAC,EAAV;AAAaC,EAAAA,QAAQ,EAAC,EAAtB;AAAyBC,EAAAA,KAAK,EAAC;AAA/B,CAAT;AACP,OAAO,SAASC,MAAT,CAAgBH,QAAhB,EAAyBC,QAAzB,EAAkCG,SAAlC,EAA4CC,SAA5C,EAAuD;AAC1DN,EAAAA,IAAI,GAAC;AAACC,IAAAA,QAAQ,EAAC,EAAV;AAAaC,IAAAA,QAAQ,EAAC,EAAtB;AAAyBC,IAAAA,KAAK,EAAC;AAA/B,GAAL;AACA,QAAMI,OAAO,GAAGX,KAAK,CAACY,GAAN,CAAW,GAAET,OAAQ,eAAcE,QAAS,KAAIC,QAAS,EAAzD,EAA6D;AAAEO,IAAAA,WAAW,EAAE;AAAf,GAA7D,CAAhB;AACI,SAAOF,OAAO,CAACG,IAAR,CAAcC,QAAD,IAAc;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;;AACA,QAAIW,QAAQ,CAACX,IAAT,IAAe,IAAnB,EACA;AACIM,MAAAA,SAAS;AACTT,MAAAA,OAAO,CAAC;AAACiB,QAAAA,IAAI,EAAC,OAAN;AAAcC,QAAAA,KAAK,EAAC;AAApB,OAAD,CAAP;AACH,KAJD,MAMA;AACEH,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB,EAFF,CAGE;AACA;;AAIAK,MAAAA,SAAS,CAACM,QAAQ,CAACX,IAAT,CAAcgB,QAAf,EAAyBL,QAAQ,CAACX,IAAT,CAAciB,gBAAvC,CAAT;AAEApB,MAAAA,OAAO,CAAC;AAACiB,QAAAA,IAAI,EAACb,QAAN;AAAec,QAAAA,KAAK,EAAC;AAArB,OAAD,CAAP;AAGD;AAIJ,GAzBU,EAyBRG,KAzBQ,CAyBFC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAzBP,CAAP;AA0BL;AAGD,OAAO,SAASC,QAAT,CAAkBnB,QAAlB,EAA2BC,QAA3B,EAAoCG,SAApC,EAA8CC,SAA9C,EAAyD;AAC9D,QAAMC,OAAO,GAAGX,KAAK,CAACyB,IAAN,CAAY,GAAEtB,OAAQ,kBAAiBE,QAAS,KAAIC,QAAS,EAA7D,EAAiE;AAAEO,IAAAA,WAAW,EAAE;AAAf,GAAjE,CAAhB;AACA,SAAOF,OAAO,CAACG,IAAR,CAAcC,QAAD,IAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;;AACA,QAAIW,QAAQ,CAACX,IAAT,IAAe,IAAnB,EACA;AACIM,MAAAA,SAAS;AACZ,KAHD,MAKA;AACIT,MAAAA,OAAO,CAAC;AAACiB,QAAAA,IAAI,EAACb,QAAN;AAAec,QAAAA,KAAK,EAAC;AAArB,OAAD,CAAP;AACAV,MAAAA,SAAS,CAACJ,QAAD,CAAT;AACH;AACJ,GAXM,EAWJiB,KAXI,CAWEC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAXX,CAAP;AAaC;AAGD,OAAO,SAASG,UAAT,CAAoBN,QAApB,EAA6BO,WAA7B,EAAyCC,WAAzC,EAAqDC,YAArD,EAAkEpB,SAAlE,EAA4EC,SAA5E,EAAuF;AAC5FM,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAD4F,CAE5F;;AACA,QAAMN,OAAO,GAAGX,KAAK,CAACyB,IAAN,CAAY,GAAEtB,OAAQ,oBAAmBiB,QAAS,KAAIO,WAAY,KAAIC,WAAY,KAAIC,YAAa,EAAnG,EAAuG;AAAEhB,IAAAA,WAAW,EAAE;AAAf,GAAvG,CAAhB;AACA,SAAOF,OAAO,CAACG,IAAR,CAAcC,QAAD,IAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;;AACA,QAAIW,QAAQ,CAACX,IAAT,IAAe,IAAnB,EACA;AACEM,MAAAA,SAAS;AACV,KAHD,MAKA;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;AACAK,MAAAA,SAAS,CAACM,QAAQ,CAACX,IAAV,CAAT;AACD;AACJ,GAXM,EAWJkB,KAXI,CAWEC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAXX,CAAP;AAaC;AAED,OAAO,SAASO,SAAT,CAAmBV,QAAnB,EAA4BO,WAA5B,EAAwCI,UAAxC,EAAmDC,EAAnD,EAAsDvB,SAAtD,EAAgEC,SAAhE,EAA2E;AAChFM,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EADgF,CAEhF;;AACA,QAAMN,OAAO,GAAGX,KAAK,CAACyB,IAAN,CAAY,GAAEtB,OAAQ,mBAAkBiB,QAAS,KAAIO,WAAY,KAAII,UAAW,KAAIC,EAAG,EAAvF,EAA2F;AAAEnB,IAAAA,WAAW,EAAE;AAAf,GAA3F,CAAhB;AACA,SAAOF,OAAO,CAACG,IAAR,CAAcC,QAAD,IAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;;AACA,QAAIW,QAAQ,CAACX,IAAT,IAAe,IAAnB,EACA;AACEM,MAAAA,SAAS,CAAC,wCAAD,CAAT;AACD,KAHD,MAKA;AACE,UAAGK,QAAQ,CAACX,IAAT,CAAc6B,MAAd,KAAyB,KAA5B,EACA;AACEvB,QAAAA,SAAS,CAACK,QAAQ,CAACX,IAAT,CAAc8B,GAAf,CAAT;AACD,OAHD,MAKA;AACEzB,QAAAA,SAAS,CAACW,QAAD,EAAWW,UAAX,EAAuBhB,QAAQ,CAACX,IAAT,CAAc8B,GAArC,CAAT;AACD;AAEF;AACJ,GAnBM,EAmBJZ,KAnBI,CAmBEC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAnBX,CAAP;AAqBC;AAED,OAAO,SAASY,QAAT,CAAkBC,SAAlB,EAA4BC,OAA5B,EAAoCC,IAApC,EAAyCC,OAAzC,EAAiDC,UAAjD,EAA4DC,UAA5D,EAAuEC,MAAvE,EAA8EjC,SAA9E,EAAwFC,SAAxF,EAAmG;AACxGM,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADwG,CAExG;;AACA,QAAMN,OAAO,GAAGX,KAAK,CAACyB,IAAN,CAAY,GAAEtB,OAAQ,kBAAiBiC,SAAU,KAAIC,OAAQ,KAAIC,IAAK,KAAIC,OAAQ,KAAIC,UAAW,KAAIC,UAAW,KAAIC,MAAO,EAA3H,EAA+H;AAAE7B,IAAAA,WAAW,EAAE;AAAf,GAA/H,CAAhB;AACA,SAAOF,OAAO,CAACG,IAAR,CAAcC,QAAD,IAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;;AACA,QAAIW,QAAQ,CAACX,IAAT,IAAe,IAAnB,EACA;AACEM,MAAAA,SAAS,CAAC,wCAAD,CAAT;AACD,KAHD,MAKA;AACE,UAAGK,QAAQ,CAACX,IAAT,CAAc6B,MAAd,KAAyB,KAA5B,EACA;AACEvB,QAAAA,SAAS,CAACK,QAAQ,CAACX,IAAT,CAAc8B,GAAf,CAAT;AACD,OAHD,MAKA;AACEzB,QAAAA,SAAS,CAACM,QAAQ,CAACX,IAAV,CAAT;AACD;AAEF;AACJ,GAnBM,EAmBJkB,KAnBI,CAmBEC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAnBX,CAAP;AAqBC;AAED,OAAO,SAASoB,iBAAT,CAA2BP,SAA3B,EAAsCC,OAAtC,EAA+CO,WAA/C,EAA4DnC,SAA5D,EAAuEC,SAAvE,EAAkF;AACvFM,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EADuF,CAEvF;;AACA,QAAMN,OAAO,GAAGX,KAAK,CAACyB,IAAN,CAAY,GAAEtB,OAAQ,2BAA0BiC,SAAU,KAAIC,OAAQ,KAAIO,WAAY,EAAtF,EAA0F;AAAE/B,IAAAA,WAAW,EAAE;AAAf,GAA1F,CAAhB;AACA,SAAOF,OAAO,CAACG,IAAR,CAAcC,QAAD,IAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;;AACA,QAAIW,QAAQ,CAACX,IAAT,IAAe,IAAnB,EACA;AACEM,MAAAA,SAAS,CAAC,gDAAD,CAAT;AACD,KAHD,MAKA;AACE,UAAGK,QAAQ,CAACX,IAAT,CAAc6B,MAAd,KAAyB,KAA5B,EACA;AACEvB,QAAAA,SAAS,CAACK,QAAQ,CAACX,IAAV,CAAT;AACD,OAHD,MAKA;AACEK,QAAAA,SAAS,CAACM,QAAQ,CAACX,IAAV,CAAT;AACD;AAEF;AACJ,GAnBM,EAmBJkB,KAnBI,CAmBEC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAnBX,CAAP;AAqBC;AAST,OAAO,SAASsB,MAAT,CAAgBC,IAAhB,EAAqBrC,SAArB,EAA+BC,SAA/B,EAA0C;AAC7CM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAMN,OAAO,GAAGX,KAAK,CAAC+C,GAAN,CAAW,GAAE5C,OAAQ,kBAArB,EAAuC6C,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAvC,EAChB;AAACI,IAAAA,OAAO,EAAE;AACR;AACA,sBAAgB;AAFR;AAAV,GADgB,CAAhB;AAMA,SAAOvC,OAAO,CAACG,IAAR,CAAcC,QAAD,IAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;;AACA,QAAIW,QAAQ,CAACX,IAAT,IAAe,IAAnB,EACA;AACIM,MAAAA,SAAS;AACZ,KAHD,MAKA;AACID,MAAAA,SAAS;AACZ;AACJ,GAVM,EAUJa,KAVI,CAUEC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAVX,CAAP;AAWD","sourcesContent":["import axios from 'axios'\r\n\r\nimport {SetUser} from '../components/Navigator'; \r\nimport {global_setData} from '../components/Todo'; \r\n\r\nconst baseUrl = 'http://localhost:3001'\r\nexport let data={username:\"\",password:\"\",lists:\"[]\"}\r\nexport function signIn(username,password,onSuccess,onFailure) {\r\n    data={username:\"\",password:\"\",lists:\"[]\"}\r\n    const request = axios.get(`${baseUrl}/api/login/:${username}/:${password}`,  { crossdomain: true })\r\n        return request.then((response) => {\r\n        console.log(response.data)\r\n        if (response.data==null)\r\n        {\r\n            onFailure()\r\n            SetUser({name:\"guest\",isLog:false})\r\n        }\r\n        else\r\n        {\r\n          console.log(\"after getting user projects:\")\r\n          console.log(response.data)\r\n          // console.log(response.data.userName)\r\n          // console.log(response.data.userProjectsJSON)\r\n          \r\n\r\n\r\n          onSuccess(response.data.userName, response.data.userProjectsJSON)\r\n\r\n          SetUser({name:username,isLog:true})\r\n          \r\n           \r\n        }\r\n        \r\n        \r\n\r\n    }).catch(error => console.log(error))\r\n  }\r\n\r\n\r\n  export function register(username,password,onSuccess,onFailure) {\r\n    const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\r\n    return request.then((response) => {\r\n        console.log(response.data)\r\n        if (response.data==null)\r\n        {\r\n            onFailure()\r\n        }\r\n        else\r\n        {\r\n            SetUser({name:username,isLog:true})\r\n            onSuccess(username)\r\n        }\r\n    }).catch(error => console.log(error))\r\n  \r\n    }\r\n\r\n\r\n    export function addProject(userName,projectName,projectDesc,projectsList,onSuccess,onFailure) {\r\n      console.log(\"serverCom addProjectToDB\") \r\n      //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\r\n      const request = axios.post(`${baseUrl}/api/addProject/:${userName}/:${projectName}/:${projectDesc}/:${projectsList}`,  { crossdomain: true })\r\n      return request.then((response) => {\r\n          console.log(response.data)\r\n          if (response.data==null)\r\n          {\r\n            onFailure()\r\n          }\r\n          else\r\n          {\r\n            console.log(response.data)\r\n            onSuccess(response.data)\r\n          }\r\n      }).catch(error => console.log(error))\r\n    \r\n      }\r\n\r\n      export function addMember(userName,projectName,premission,id,onSuccess,onFailure) {\r\n        console.log(\"serverCom addMemberToDB\") \r\n        //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\r\n        const request = axios.post(`${baseUrl}/api/addMember/:${userName}/:${projectName}/:${premission}/:${id}`,  { crossdomain: true })\r\n        return request.then((response) => {\r\n            console.log(\"sc addMember\")\r\n            console.log(response.data)\r\n            if (response.data==null)\r\n            {\r\n              onFailure(\"There was an error while adding member\")\r\n            }\r\n            else\r\n            {\r\n              if(response.data.passed === false)\r\n              {\r\n                onFailure(response.data.msg)\r\n              }\r\n              else\r\n              {\r\n                onSuccess(userName, premission, response.data.msg)\r\n              }\r\n             \r\n            }\r\n        }).catch(error => console.log(error))\r\n      \r\n        }\r\n\r\n        export function addIssue(projectID,issueID,desc,dueDate,assignedBy,assignedTo,status,onSuccess,onFailure) {\r\n          console.log(\"serverCom addIssue\") \r\n          //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\r\n          const request = axios.post(`${baseUrl}/api/addIssue/:${projectID}/:${issueID}/:${desc}/:${dueDate}/:${assignedBy}/:${assignedTo}/:${status}`,  { crossdomain: true })\r\n          return request.then((response) => {\r\n              console.log(\"sc addIssue\")\r\n              console.log(response.data)\r\n              if (response.data==null)\r\n              {\r\n                onFailure(\"There was an error while adding member\")\r\n              }\r\n              else\r\n              {\r\n                if(response.data.passed === false)\r\n                {\r\n                  onFailure(response.data.msg)\r\n                }\r\n                else\r\n                {\r\n                  onSuccess(response.data)\r\n                }\r\n               \r\n              }\r\n          }).catch(error => console.log(error))\r\n        \r\n          }\r\n\r\n          export function updateIssueStatus(projectID, issueID, finalStatus, onSuccess, onFailure) {\r\n            console.log(\"serverCom updateIssue\") \r\n            //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\r\n            const request = axios.post(`${baseUrl}/api/updateIssueStatus/:${projectID}/:${issueID}/:${finalStatus}`,  { crossdomain: true })\r\n            return request.then((response) => {\r\n                console.log(\"sc addIssue\")\r\n                console.log(response.data)\r\n                if (response.data==null)\r\n                {\r\n                  onFailure(\"There was an error while updating issue status\")\r\n                }\r\n                else\r\n                {\r\n                  if(response.data.passed === false)\r\n                  {\r\n                    onFailure(response.data)\r\n                  }\r\n                  else\r\n                  {\r\n                    onSuccess(response.data)\r\n                  }\r\n                 \r\n                }\r\n            }).catch(error => console.log(error))\r\n          \r\n            }\r\n\r\n\r\n      \r\n\r\n\r\n  \r\n\r\n\r\n    export function update(user,onSuccess,onFailure) {\r\n        console.log(\"update\")\r\n        const request = axios.put(`${baseUrl}/api/update/user`,JSON.stringify(user),\r\n        {headers: {\r\n          // Overwrite Axios's automatically set Content-Type\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        return request.then((response) => {\r\n            console.log(response.data)\r\n            if (response.data==null)\r\n            {\r\n                onFailure()\r\n            }\r\n            else\r\n            {\r\n                onSuccess()\r\n            }\r\n        }).catch(error => console.log(error))\r\n      }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n      \r\n  \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}