{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yonathan\\\\Documents\\\\GitHub\\\\WebProject\\\\client\\\\src\\\\components\\\\LogIn.js\";\nimport { Form, Button, Container, Row, Col, Badge, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sc = require(\"../services/serverCom.js\");\n\nconst onSuccess = () => {};\n\nconst onFailure = () => {\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    show: show,\n    variant: \"warning\",\n    children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n      children: \"How's it going?!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShow(false),\n        variant: \"outline-warning\",\n        children: \"Close me y'all!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\nconst onSubmit = event => {\n  event.preventDefault();\n  const form = event.currentTarget;\n  console.log(\"formGridUserName\");\n  console.log(form.formGridUserName.value);\n  console.log(\"formGridPassword\");\n  console.log(form.formGridPassword.value);\n  const username = form.formGridUserName.value;\n  const password = form.formGridPassword.value;\n  sc.signIn(username, password, onSuccess, onFailure);\n  form.formGridUserName.value = \"\";\n  form.formGridPassword.value = \"\";\n};\n\nconst LogIn = props => {\n  // ...\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGridUserName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"username\",\n          placeholder: \"Enter username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGridPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"button\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 1\n  }, this);\n};\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["C:/Users/Yonathan/Documents/GitHub/WebProject/client/src/components/LogIn.js"],"names":["Form","Button","Container","Row","Col","Badge","Alert","sc","require","onSuccess","onFailure","show","setShow","onSubmit","event","preventDefault","form","currentTarget","console","log","formGridUserName","value","formGridPassword","username","password","signIn","LogIn","props"],"mappings":"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","sourcesContent":["import {  Form, Button,Container ,Row,Col,Badge,Alert} from 'react-bootstrap'\r\n\r\nconst sc=require(\"../services/serverCom.js\");\r\n\r\nconst onSuccess=()=>\r\n{\r\n\r\n}\r\n\r\nconst onFailure=()=>\r\n{\r\n  return(\r\n  <Alert show={show} variant=\"warning\">\r\n        <Alert.Heading>How's it going?!</Alert.Heading>\r\n        <p>\r\n          Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget\r\n          lacinia odio sem nec elit. Cras mattis consectetur purus sit amet\r\n          fermentum.\r\n        </p>\r\n        <hr />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button onClick={() => setShow(false)} variant=\"outline-warning\">\r\n            Close me y'all!\r\n          </Button>\r\n        </div>\r\n      </Alert>\r\n  )\r\n}\r\n\r\nconst onSubmit=(event)=>\r\n{\r\n  event.preventDefault();\r\n  \r\n  const form = event.currentTarget\r\n  console.log(\"formGridUserName\")\r\n  console.log(form.formGridUserName.value)\r\n\r\n  console.log(\"formGridPassword\")\r\n  console.log(form.formGridPassword.value)\r\n\r\n  const username=form.formGridUserName.value\r\n  const password=form.formGridPassword.value\r\n\r\n  \r\n  sc.signIn(username,password,onSuccess,onFailure)\r\n\r\n\r\n  form.formGridUserName.value=\"\"\r\n  form.formGridPassword.value=\"\"\r\n  \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst LogIn = (props) => {\r\n    // ...\r\n    return (\r\n<Form onSubmit={onSubmit} >\r\n<h1>\r\n  Sign in\r\n  </h1>\r\n  <Col>\r\n    <Form.Group   controlId=\"formGridUserName\">\r\n      <Form.Label>Username</Form.Label>\r\n      <Form.Control type=\"username\" placeholder=\"Enter username\" />\r\n    </Form.Group>\r\n\r\n    <Form.Group   controlId=\"formGridPassword\">\r\n      <Form.Label>Password</Form.Label>\r\n      <Form.Control type=\"password\" placeholder=\"Password\" />\r\n    </Form.Group>\r\n  </Col>\r\n<Col>\r\n  <Form.Group  controlId=\"button\" >\r\n  <Row>\r\n      <Col md={4}>\r\n          <Button type=\"submit\">Sign in</Button>\r\n      </Col>\r\n  </Row>\r\n\r\n    </Form.Group>\r\n </Col>\r\n</Form>\r\n      \r\n  )}\r\n\r\n\r\n  export default LogIn"]},"metadata":{},"sourceType":"module"}