{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web_Project\\\\client\\\\src\\\\components\\\\Home2.js\";\nimport { Card, Form, Button, Container, Row, Col, Badge, Alert, Tab, ListGroup, Accordion, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListsComponent = ({\n  InputLists,\n  size,\n  setList,\n  setInputLists\n}) => {\n  const addList = text => {\n    const newList = [...InputLists, {\n      name: text,\n      tasks: []\n    }];\n    setInputLists(newList);\n  };\n\n  if (InputLists == null) InputLists = [];\n  if (!Array.isArray(InputLists)) InputLists = [];\n  return /*#__PURE__*/_jsxDEV(Col, {\n    sm: size,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      className: \"g-4\",\n      children: Array.from({\n        length: 4\n      }).map((_, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Project Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Project Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListsComponent;\n\nconst Home = ({\n  uesrName\n}) => {\n  //read projcets of user\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hello, Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListsComponent, {\n        setInputLists: setInputLists,\n        InputLists: null,\n        size: 4,\n        setList: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListsComponent\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["C:/Web_Project/client/src/components/Home2.js"],"names":["Card","Form","Button","Container","Row","Col","Badge","Alert","Tab","ListGroup","Accordion","Modal","ListsComponent","InputLists","size","setList","setInputLists","addList","text","newList","name","tasks","Array","isArray","from","length","map","_","idx","Home","uesrName"],"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,GAAxC,EAA6CC,GAA7C,EAAkDC,KAAlD,EAAyDC,KAAzD,EAAgEC,GAAhE,EAAqEC,SAArE,EAAgFC,SAAhF,EAA2FC,KAA3F,QAAwG,iBAAxG;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA;AAA7B,CAAD,KAAkD;AACrE,QAAMC,OAAO,GAAGC,IAAI,IAAI;AACpB,UAAMC,OAAO,GAAG,CAAC,GAAGN,UAAJ,EAAgB;AAAEO,MAAAA,IAAI,EAAEF,IAAR;AAAcG,MAAAA,KAAK,EAAE;AAArB,KAAhB,CAAhB;AACAL,IAAAA,aAAa,CAACG,OAAD,CAAb;AACH,GAHD;;AAIA,MAAIN,UAAU,IAAI,IAAlB,EAAwBA,UAAU,GAAG,EAAb;AACxB,MAAI,CAACS,KAAK,CAACC,OAAN,CAAcV,UAAd,CAAL,EAAgCA,UAAU,GAAG,EAAb;AAChC,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,EAAEC,IAAT;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,SAAS,EAAC,KAA7B;AAAA,gBACCQ,KAAK,CAACE,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX,EAA0BC,GAA1B,CAA8B,CAACC,CAAD,EAAIC,GAAJ,kBAC3B,QAAC,GAAD;AAAA,+BACA,QAAC,IAAD;AAAA,iCACA,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA1BD;;KAAMhB,c;;AA4BN,MAAMiB,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3B;AACA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,aAAa,EAAEd,aAA/B;AAA8C,QAAA,UAAU,EAAE,IAA1D;AAAgE,QAAA,IAAI,EAAE,CAAtE;AAAyE,QAAA,OAAO,EAAED;AAAlF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcE,CAhBN;;MAAMc,I;AAiBN,eAAeA,IAAf","sourcesContent":["import { Card, Form, Button, Container, Row, Col, Badge, Alert, Tab, ListGroup, Accordion, Modal } from 'react-bootstrap'\r\n\r\nconst ListsComponent = ({ InputLists, size, setList, setInputLists }) => {\r\n    const addList = text => {\r\n        const newList = [...InputLists, { name: text, tasks: [] }];\r\n        setInputLists(newList);\r\n    };\r\n    if (InputLists == null) InputLists = []\r\n    if (!Array.isArray(InputLists)) InputLists = []\r\n    return (\r\n        <Col sm={size}>\r\n            <Row xs={1} md={2} className=\"g-4\">\r\n            {Array.from({ length: 4 }).map((_, idx) => (\r\n                <Col>\r\n                <Card >\r\n                <Card.Body>\r\n                    <Card.Title>Project Title</Card.Title>\r\n                    <Card.Text>\r\n                        Project Description\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\">Open</Button>\r\n                </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            ))}\r\n            </Row>\r\n        </Col>\r\n    );\r\n}\r\n\r\nconst Home = ({ uesrName }) => {\r\n    //read projcets of user\r\n    return (\r\n        <div >\r\n        <div className=\"home\">\r\n            <h2>Hello, Username</h2>\r\n        </div>\r\n        <div className=\"center\">\r\n            <h3>My Projects</h3>\r\n            <ListsComponent setInputLists={setInputLists} InputLists={null} size={4} setList={setList} ></ListsComponent>\r\n        </div>\r\n        </div>\r\n\r\n\r\n\r\n      \r\n    )}\r\nexport default Home"]},"metadata":{},"sourceType":"module"}