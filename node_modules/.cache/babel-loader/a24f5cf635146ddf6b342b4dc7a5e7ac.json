{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web_Project\\\\client\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Container, Row, Col, Badge, Alert } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sc = require(\"../services/serverCom.js\");\n\nvar setNotefunc = () => {};\n\nvar setNoteTextfunc = () => {};\n\nvar setNoteVarfunc = () => {};\n\nvar history = null;\n\nconst onSuccess = () => {\n  console.log(\"onSuccess\");\n  setNoteVarfunc(\"success\");\n  setNoteTextfunc(\"Registerd successfuly\");\n  setNotefunc(true);\n};\n\nconst onFailure = () => {\n  console.log(\"onFailure\");\n  setNoteVarfunc(\"warning\");\n  setNoteTextfunc(\"User exists\");\n  setNotefunc(true);\n};\n\nvar onSubmit = event => {\n  event.preventDefault();\n  const form = event.currentTarget;\n  console.log(\"formGridUserName\");\n  console.log(form.formGridUserName.value);\n  console.log(\"formGridPassword\");\n  console.log(form.formGridPassword.value);\n  console.log(\"formGridPasswordAgain\");\n  console.log(form.formGridPasswordAgain.value);\n  const username = form.formGridUserName.value;\n  const password = form.formGridPassword.value;\n  const PasswordAgain = form.formGridPasswordAgain.value;\n\n  if (password !== PasswordAgain) {\n    setNoteTextfunc(\"Passwords dont match\");\n    setNoteVarfunc(\"warning\");\n    setNotefunc(true);\n    return;\n  }\n\n  if (username.length < 4 || username.length > 10) {\n    setNoteTextfunc(\"username lenght should be between 4 and 10\");\n    setNoteVarfunc(\"warning\");\n    setNotefunc(true);\n    return;\n  }\n\n  if (password.length < 4 || password.length > 10) {\n    setNoteTextfunc(\"Password lenght should be between 4 and 10\");\n    setNoteVarfunc(\"warning\");\n    setNotefunc(true);\n    return;\n  }\n\n  sc.register(username, password, onSuccess, onFailure);\n};\n\nconst Register = ({\n  setAuto\n}) => {\n  _s();\n\n  let History = useHistory();\n  history = History;\n  const [show, setShow] = useState(false);\n  const [notificationText, setNotificationText] = useState(\"empty\");\n  const [notificationVariant, setNotificationVariant] = useState(\"warning\");\n  setNotefunc = setShow;\n  setNoteTextfunc = setNotificationText;\n  setNoteVarfunc = setNotificationVariant;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formBorder\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        show: show,\n        variant: `${notificationVariant}`,\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: \"Registration info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notificationText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShow(false),\n            variant: \"outline-warning\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridUserName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"username\",\n            placeholder: \"Choose your username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Choose your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPasswordAgain\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm the chosen password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              block: true,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Register, \"UTvwJw9HVhy8jHruj06uz12fkho=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Web_Project/client/src/components/Register.js"],"names":["Form","Button","Container","Row","Col","Badge","Alert","React","useState","useHistory","sc","require","setNotefunc","setNoteTextfunc","setNoteVarfunc","history","onSuccess","console","log","onFailure","onSubmit","event","preventDefault","form","currentTarget","formGridUserName","value","formGridPassword","formGridPasswordAgain","username","password","PasswordAgain","length","register","Register","setAuto","History","show","setShow","notificationText","setNotificationText","notificationVariant","setNotificationVariant"],"mappings":"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","sourcesContent":["import {  Form, Button,Container ,Row,Col,Badge,Alert} from 'react-bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nconst sc=require(\"../services/serverCom.js\");\r\n\r\nvar setNotefunc=()=>{}\r\nvar setNoteTextfunc=()=>{}\r\nvar setNoteVarfunc=()=>{}\r\n\r\nvar history=null\r\n\r\nconst onSuccess=()=>\r\n{\r\n  console.log(\"onSuccess\")\r\n  setNoteVarfunc(\"success\")\r\n  setNoteTextfunc(\"Registerd successfuly\")\r\n  setNotefunc(true)\r\n}\r\n\r\nconst onFailure=()=>\r\n{\r\n  console.log(\"onFailure\")\r\n  setNoteVarfunc(\"warning\")\r\n  setNoteTextfunc(\"User exists\")\r\n  setNotefunc(true)\r\n}\r\n\r\n\r\nvar onSubmit=(event)=>{\r\n\r\n\r\n  event.preventDefault();\r\n  \r\n  const form = event.currentTarget\r\n  console.log(\"formGridUserName\")\r\n  console.log(form.formGridUserName.value)\r\n\r\n  console.log(\"formGridPassword\")\r\n  console.log(form.formGridPassword.value)\r\n\r\n  console.log(\"formGridPasswordAgain\")\r\n  console.log(form.formGridPasswordAgain.value)\r\n\r\n  const username=form.formGridUserName.value\r\n  const password=form.formGridPassword.value\r\n  const PasswordAgain=form.formGridPasswordAgain.value\r\n  if(password!==PasswordAgain ){\r\n    setNoteTextfunc(\"Passwords dont match\")\r\n    setNoteVarfunc(\"warning\")\r\n    setNotefunc(true)\r\n    return\r\n  }\r\n  if(username.length<4 || username.length>10){\r\n    setNoteTextfunc(\"username lenght should be between 4 and 10\")\r\n    setNoteVarfunc(\"warning\")\r\n    setNotefunc(true)\r\n    return\r\n  }\r\n  if(password.length<4 || password.length>10){\r\n    setNoteTextfunc(\"Password lenght should be between 4 and 10\")\r\n    setNoteVarfunc(\"warning\")\r\n    setNotefunc(true)\r\n    return\r\n  }\r\n  sc.register(username,password,onSuccess,onFailure)\r\n\r\n\r\n\r\n}\r\n\r\nconst Register = ({ setAuto }) => {\r\n    let History = useHistory()\r\n    history=History\r\n    const [show, setShow] = useState(false);\r\n    const [notificationText,setNotificationText]=useState(\"empty\")\r\n    const [notificationVariant,setNotificationVariant]=useState(\"warning\")\r\n    setNotefunc=setShow\r\n    setNoteTextfunc=setNotificationText\r\n    setNoteVarfunc=setNotificationVariant\r\n    return (\r\n      <div className='formBorder'>\r\n        <Form onSubmit={onSubmit}  >\r\n        <h1 >\r\n        Register\r\n        </h1>\r\n\r\n        <Alert show={show} variant={`${notificationVariant}`} >\r\n              <Alert.Heading>Registration info</Alert.Heading>\r\n              <p>\r\n                {notificationText}\r\n              </p>\r\n              <hr />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Button onClick={() => setShow(false)} variant=\"outline-warning\">\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </Alert>\r\n        <Col>\r\n          <Form.Group   controlId=\"formGridUserName\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"username\" placeholder=\"Choose your username\" />\r\n          </Form.Group>\r\n      \r\n          <Form.Group   controlId=\"formGridPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Choose your password\" />\r\n          </Form.Group>\r\n          <Form.Group   controlId=\"formGridPasswordAgain\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Confirm the chosen password\" />\r\n          </Form.Group>\r\n        </Col>\r\n      <Col>\r\n        <Form.Group  controlId=\"button\" >\r\n        <Row>\r\n          <Button type=\"submit\" block>Register</Button>\r\n        </Row>\r\n      \r\n          </Form.Group>\r\n       </Col>\r\n      </Form>\r\n      </div>\r\n    )}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}