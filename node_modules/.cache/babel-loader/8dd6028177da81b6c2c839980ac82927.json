{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web_Project\\\\client\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Form, Button, Container, Row, Col, Badge, Alert, Tab, ListGroup, Accordion, Modal } from 'react-bootstrap';\nimport React, { list, useRef, useState, useEffect } from 'react';\nimport { useHistory, Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sc = require(\"../services/serverCom.js\"); //ref to Todo.js -> ListsComponent\n\n\nlet global_setProjcetList;\nvar history = null;\nvar loaded = false;\n\nconst Home = ({\n  userName,\n  userProjects,\n  setProjectJson\n}) => {\n  _s();\n\n  let History = useHistory();\n  history = History;\n  window.addEventListener(\"load\", event => {\n    if (loaded === false) loaded = true;else history.push(\"/Login\");\n  });\n  const [formValidated, setFormValidated] = useState(false);\n  const [m_userName, setUserName] = useState(userName);\n  const [show, setShow] = useState(false);\n  const projectsListExample = [{\n    name: 'John',\n    Description: '25/12/1990'\n  }]; // let myString = \"[{\\\"admin\\\":[\\\"User\\\"],\\\"members\\\":[],\\\"_id\\\":\\\"6296379147ff6a109caf65e7\\\",\\\"projectName\\\":\\\"ggg\\\",\\\"creator\\\":\\\"User\\\",\\\"projectDesc\\\":\\\"\\\",\\\"time\\\":\\\"31/05/2022\\\",\\\"__v\\\":0},{\\\"admin\\\":[\\\"elro\\\"],\\\"members\\\":[],\\\"_id\\\":\\\"62963b2c4fcb3e277cfad88d\\\",\\\"projectName\\\":\\\"plz work\\\",\\\"creator\\\":\\\"elro\\\",\\\"projectDesc\\\":\\\"damnitr\\\",\\\"time\\\":\\\"31/05/2022\\\",\\\"__v\\\":0}]\";\n  // let json = JSON.parse(myString)\n  // console.log(json)\n  // console.log(typeof json)\n\n  var projectToJson = [];\n  if (userProjects.length != 0) projectToJson = JSON.parse(userProjects);\n  const [projectsList, setProjcetList] = useState(projectToJson);\n\n  const goToProject = projectID => {\n    console.log(\"open clicked\"); // setProjectJson = projectsList[projectIndex]\n\n    console.log(projectID);\n\n    for (var i = 0; i < projectsList.length; i++) {\n      if (projectsList[i]._id === projectID) {\n        console.log(projectsList[i]);\n        setProjectJson(projectsList[i]);\n        break;\n      }\n    }\n\n    history.go(0); //history.replace(\"/ProjectWindow\")\n  };\n\n  const onAddProjectSuccess = projectJson => {\n    console.log(\"Home2 onAddProjectSuccess\");\n    console.log(projectJson);\n    console.log(typeof projectJson);\n    var projectToJson = JSON.parse(projectJson); //add project to projects list\n\n    const newList = [...projectsList, projectToJson]; // console.log(newList);\n\n    setProjcetList(newList); // console.log(projectsList);\n  };\n\n  const onAddProjectFailed = () => {\n    //Notify User\n    console.log(\"project failed to add\");\n    alert('such project already exists!');\n  };\n\n  const handleClose = () => {\n    setFormValidated(false);\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const addProject = () => {\n    handleShow();\n  };\n\n  const addProjectToDB = (user, projectName, projectDesc) => {\n    console.log(\"addProjectToDB\");\n    sc.addProject(user, projectName, projectDesc, projectsList, onAddProjectSuccess, onAddProjectFailed);\n  };\n\n  const submitProject = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const projectName = form.projectName.value;\n    const projectDesc = form.projectDescription.value;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setFormValidated(true);\n    } else {\n      handleClose();\n      addProjectToDB(userName, projectName, projectDesc); //add project to dataBase\n    }\n  }; //read projcets of user\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"labelStyle\",\n        children: [\"Hello, \", m_userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"projectName\",\n          className: \"labelStyle\",\n          children: \"My Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          onClick: addProject,\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"ProjctsGrid\",\n        children: projectsList.map(({\n          _id,\n          projectName,\n          creator,\n          projectDesc,\n          time\n        }) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [\"Owner: \", creator]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  style: {\n                    fontSize: 26\n                  },\n                  children: projectName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                  className: \"mb-2 text-muted\",\n                  style: {\n                    fontSize: 14\n                  },\n                  children: [\"Created in: \", time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  style: {\n                    fontSize: 20\n                  },\n                  children: projectDesc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: () => goToProject(_id),\n                  children: \"Open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)]\n            }, \"{_id}\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        show: show,\n        onHide: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: formValidated,\n          onSubmit: submitProject,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"projectName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Projcet Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"text\",\n                placeholder: \"Insert Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"valid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter a projet name.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"projectDescription\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                placeholder: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"W4b2JafZvMxIcqM8+R4VVjhGdXc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Web_Project/client/src/components/Home.js"],"names":["Card","Form","Button","Container","Row","Col","Badge","Alert","Tab","ListGroup","Accordion","Modal","React","list","useRef","useState","useEffect","useHistory","Route","Redirect","sc","require","global_setProjcetList","history","loaded","Home","userName","userProjects","setProjectJson","History","window","addEventListener","event","push","formValidated","setFormValidated","m_userName","setUserName","show","setShow","projectsListExample","name","Description","projectToJson","length","JSON","parse","projectsList","setProjcetList","goToProject","projectID","console","log","i","_id","go","onAddProjectSuccess","projectJson","newList","onAddProjectFailed","alert","handleClose","handleShow","addProject","addProjectToDB","user","projectName","projectDesc","submitProject","preventDefault","form","currentTarget","value","projectDescription","checkValidity","stopPropagation","map","creator","time","fontSize"],"mappings":"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","sourcesContent":["import { Card, Form, Button, Container, Row, Col, Badge, Alert, Tab, ListGroup, Accordion, Modal } from 'react-bootstrap'\r\nimport React, { list,useRef,useState, useEffect } from 'react';\r\nimport { useHistory,Route,Redirect } from \"react-router-dom\";\r\nconst sc=require(\"../services/serverCom.js\");\r\n\r\n//ref to Todo.js -> ListsComponent\r\nlet global_setProjcetList\r\nvar history=null\r\nvar loaded = false\r\nconst Home = ({ userName, userProjects, setProjectJson}) => {\r\n    let History = useHistory()\r\n    history=History\r\n\r\n\r\n    window.addEventListener(\"load\", (event) => {\r\n        if(loaded === false)\r\n            loaded = true\r\n        else\r\n            history.push(\"/Login\")\r\n    })\r\n\r\n\r\n  \r\n    const [formValidated, setFormValidated] = useState(false);\r\n    const [m_userName, setUserName] = useState(userName)\r\n    const [show, setShow] = useState(false);\r\n    const projectsListExample = [\r\n        { name: 'John', Description: '25/12/1990'},\r\n      ];\r\n    \r\n    // let myString = \"[{\\\"admin\\\":[\\\"User\\\"],\\\"members\\\":[],\\\"_id\\\":\\\"6296379147ff6a109caf65e7\\\",\\\"projectName\\\":\\\"ggg\\\",\\\"creator\\\":\\\"User\\\",\\\"projectDesc\\\":\\\"\\\",\\\"time\\\":\\\"31/05/2022\\\",\\\"__v\\\":0},{\\\"admin\\\":[\\\"elro\\\"],\\\"members\\\":[],\\\"_id\\\":\\\"62963b2c4fcb3e277cfad88d\\\",\\\"projectName\\\":\\\"plz work\\\",\\\"creator\\\":\\\"elro\\\",\\\"projectDesc\\\":\\\"damnitr\\\",\\\"time\\\":\\\"31/05/2022\\\",\\\"__v\\\":0}]\";\r\n    // let json = JSON.parse(myString)\r\n    // console.log(json)\r\n    // console.log(typeof json)\r\n    var projectToJson =[]\r\n    if(userProjects.length != 0)\r\n        projectToJson = JSON.parse(userProjects)\r\n\r\n    const [projectsList, setProjcetList] = useState(projectToJson);\r\n\r\n    const goToProject =(projectID) =>{\r\n\r\n        console.log(\"open clicked\")\r\n        // setProjectJson = projectsList[projectIndex]\r\n        console.log(projectID)\r\n        for(var i = 0; i<projectsList.length; i++)\r\n        {\r\n            if(projectsList[i]._id === projectID)\r\n            {\r\n                console.log(projectsList[i])\r\n                setProjectJson(projectsList[i])\r\n                break\r\n            }      \r\n        }\r\n        history.go(0)\r\n        //history.replace(\"/ProjectWindow\")\r\n\r\n\r\n    }\r\n\r\n\r\n    const onAddProjectSuccess = (projectJson) =>{\r\n        console.log(\"Home2 onAddProjectSuccess\") \r\n        console.log(projectJson)\r\n        console.log(typeof projectJson)\r\n        var projectToJson = JSON.parse(projectJson)\r\n        //add project to projects list\r\n        const newList = [...projectsList, projectToJson];\r\n        // console.log(newList);\r\n        setProjcetList(newList);\r\n        // console.log(projectsList);\r\n    }\r\n\r\n    const onAddProjectFailed = () =>{\r\n        //Notify User\r\n        console.log(\"project failed to add\")\r\n        alert('such project already exists!');\r\n    }\r\n\r\n    const handleClose = () => \r\n    {\r\n        setFormValidated(false);\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n\r\n    const addProject = () => \r\n    {\r\n        handleShow();\r\n    }\r\n\r\n    const addProjectToDB = (user,projectName, projectDesc) =>{\r\n        console.log(\"addProjectToDB\")\r\n        sc.addProject(user,projectName,projectDesc,projectsList, onAddProjectSuccess, onAddProjectFailed);\r\n    }\r\n\r\n    const submitProject = (event)=>\r\n    {\r\n   \r\n        event.preventDefault();\r\n        const form = event.currentTarget\r\n        const projectName = form.projectName.value\r\n        const projectDesc = form.projectDescription.value\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setFormValidated(true);\r\n        }\r\n   \r\n        else\r\n        {     \r\n            handleClose();\r\n\r\n\r\n            addProjectToDB(userName,projectName, projectDesc)\r\n\r\n            //add project to dataBase\r\n            \r\n\r\n        }\r\n\r\n  \r\n    }\r\n    //read projcets of user\r\n    return (    \r\n        <div >\r\n        <div className=\"home\" >\r\n            <div className=\"labelStyle\" >Hello, {m_userName}</div>\r\n        </div>\r\n        <div className=\"center\">\r\n            <div>\r\n                <div id=\"projectName\" className=\"labelStyle\">My Projects</div>\r\n                <Button variant=\"outline-success\" onClick={addProject} >Add Project</Button>\r\n                <hr></hr>\r\n                \r\n            </div>\r\n\r\n            {/* Projcets Grid*/}\r\n            <Container className='ProjctsGrid'>  \r\n                {projectsList.map(({ _id,projectName, creator, projectDesc, time}) => (\r\n                    <Row>\r\n                    <Col>\r\n                        <Card key = \"{_id}\">\r\n                            <Card.Header>Owner: {creator}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title style={{fontSize:26}}>{projectName}</Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\" style={{fontSize:14}} >Created in: {time}</Card.Subtitle>\r\n                                <Card.Text style={{fontSize:20}}>\r\n                                {projectDesc}\r\n                                </Card.Text>\r\n                                <Button variant=\"primary\" onClick={() => goToProject(_id)}>Open</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    </Row> \r\n                ))}    \r\n            </Container>\r\n\r\n\r\n            {/* Adding Projcet Form*/}\r\n            <Modal size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={show} onHide={handleClose}>\r\n                <Form noValidate validated={formValidated} onSubmit={submitProject}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Project</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        {/* ProjectName */}\r\n                        <Form.Group controlId=\"projectName\">\r\n                            <Form.Label>Projcet Name</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder={\"Insert Name\"} />\r\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please enter a projet name.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        {/* Description */}\r\n                        <Form.Group controlId=\"projectDescription\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Description\" />   \r\n                        </Form.Group>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\" >\r\n                            Add\r\n                        </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            \r\n        </div>\r\n        </div>     \r\n    )}\r\nexport default Home"]},"metadata":{},"sourceType":"module"}