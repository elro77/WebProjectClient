{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web_Project\\\\client\\\\src\\\\components\\\\Home2.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Form, Button, Container, Row, Col, Badge, Alert, Tab, ListGroup, Accordion, Modal } from 'react-bootstrap';\nimport React, { list, useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sc = require(\"../services/serverCom.js\"); //ref to Todo.js -> ListsComponent\n\n\nlet global_setProjcetList;\n\nconst Home = ({\n  userName,\n  userProjects\n}) => {\n  _s();\n\n  const [formValidated, setFormValidated] = useState(false);\n  const [m_userName, setUserName] = useState(userName);\n  const [show, setShow] = useState(false);\n  const projectsListExample = [{\n    name: 'John',\n    Description: '25/12/1990'\n  }];\n  let string = \"{admin: [ 'User' ],members: [],_id: 6296379147ff6a109caf65e7, projectName: 'ggg',creator: 'User', projectDesc: '',time: '31/05/2022',v: 0}\";\n  console.log(userProjects);\n  const [projectsList, setProjcetList] = useState(userProjects);\n\n  const onAddProjectSuccess = projectJson => {\n    console.log(projectJson); //add project to projects list\n\n    const newList = [...projectsList, {\n      name: String(projectJson.projectName),\n      Description: String(projectJson.projectDesc)\n    }];\n    console.log(newList);\n    setProjcetList(newList);\n    console.log(projectsList);\n  };\n\n  const onAddProjectFailed = () => {\n    //Notify User\n    console.log(\"project failed to add\");\n    alert('such project already exists!');\n  };\n\n  const handleClose = () => {\n    setFormValidated(false);\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const addProject = () => {\n    handleShow();\n  };\n\n  const addProjectToDB = (user, projectName, projectDesc) => {\n    console.log(\"addProjectToDB\");\n    sc.addProject(user, projectName, projectDesc, projectsList, onAddProjectSuccess, onAddProjectFailed);\n  };\n\n  const submitProject = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const projectName = form.projectName.value;\n    const projectDesc = form.projectDescription.value;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setFormValidated(true);\n    } else {\n      handleClose();\n      addProjectToDB(userName, projectName, projectDesc); //add project to dataBase\n    }\n  }; //read projcets of user\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"labelStyle\",\n        children: [\"Hello, \", m_userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"projectName\",\n          className: \"labelStyle\",\n          children: \"My Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          onClick: addProject,\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"ProjctsGrid\",\n        children: projectsList.map(({\n          projectName,\n          projectDesc\n        }) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: projectName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: projectDesc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  children: \"Open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        show: show,\n        onHide: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: formValidated,\n          onSubmit: submitProject,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"projectName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Projcet Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"text\",\n                placeholder: \"Insert Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"valid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter a project description.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"projectDescription\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                placeholder: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"sEzHppetKGOv83kd7h4bb7WsG1s=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Web_Project/client/src/components/Home2.js"],"names":["Card","Form","Button","Container","Row","Col","Badge","Alert","Tab","ListGroup","Accordion","Modal","React","list","useRef","useState","useEffect","sc","require","global_setProjcetList","Home","userName","userProjects","formValidated","setFormValidated","m_userName","setUserName","show","setShow","projectsListExample","name","Description","string","console","log","projectsList","setProjcetList","onAddProjectSuccess","projectJson","newList","String","projectName","projectDesc","onAddProjectFailed","alert","handleClose","handleShow","addProject","addProjectToDB","user","submitProject","event","preventDefault","form","currentTarget","value","projectDescription","checkValidity","stopPropagation","map"],"mappings":"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","sourcesContent":["import { Card, Form, Button, Container, Row, Col, Badge, Alert, Tab, ListGroup, Accordion, Modal } from 'react-bootstrap'\r\nimport React, { list,useRef,useState, useEffect } from 'react';\r\nconst sc=require(\"../services/serverCom.js\");\r\n\r\n//ref to Todo.js -> ListsComponent\r\nlet global_setProjcetList\r\nconst Home = ({ userName, userProjects}) => {\r\n\r\n\r\n    const [formValidated, setFormValidated] = useState(false);\r\n    const [m_userName, setUserName] = useState(userName)\r\n    const [show, setShow] = useState(false);\r\n    const projectsListExample = [\r\n        { name: 'John', Description: '25/12/1990'},\r\n      ];\r\n    \r\n    let string = \"{admin: [ 'User' ],members: [],_id: 6296379147ff6a109caf65e7, projectName: 'ggg',creator: 'User', projectDesc: '',time: '31/05/2022',v: 0}\"\r\n      \r\n    console.log(userProjects)\r\n    const [projectsList, setProjcetList] = useState(userProjects);\r\n\r\n\r\n    const onAddProjectSuccess = (projectJson) =>{\r\n        console.log(projectJson)\r\n        \r\n        //add project to projects list\r\n        const newList = [...projectsList, {name: String(projectJson.projectName), Description: String(projectJson.projectDesc)}];\r\n        console.log(newList);\r\n        setProjcetList(newList);\r\n        console.log(projectsList);\r\n    }\r\n\r\n    const onAddProjectFailed = () =>{\r\n        //Notify User\r\n        console.log(\"project failed to add\")\r\n        alert('such project already exists!');\r\n    }\r\n\r\n    const handleClose = () => \r\n    {\r\n        setFormValidated(false);\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n\r\n    const addProject = () => \r\n    {\r\n        handleShow();\r\n    }\r\n\r\n    const addProjectToDB = (user,projectName, projectDesc) =>{\r\n        console.log(\"addProjectToDB\")\r\n        sc.addProject(user,projectName,projectDesc,projectsList, onAddProjectSuccess, onAddProjectFailed);\r\n    }\r\n\r\n    const submitProject = (event)=>\r\n    {\r\n   \r\n        event.preventDefault();\r\n        const form = event.currentTarget\r\n        const projectName = form.projectName.value\r\n        const projectDesc = form.projectDescription.value\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setFormValidated(true);\r\n        }\r\n   \r\n        else\r\n        {     \r\n            handleClose();\r\n\r\n\r\n            addProjectToDB(userName,projectName, projectDesc)\r\n\r\n            //add project to dataBase\r\n            \r\n\r\n        }\r\n\r\n  \r\n    }\r\n    //read projcets of user\r\n    return (    \r\n        <div >\r\n        <div className=\"home\">\r\n            <div className=\"labelStyle\">Hello, {m_userName}</div>\r\n        </div>\r\n        <div className=\"center\">\r\n            <div>\r\n                <div id=\"projectName\" className=\"labelStyle\">My Projects</div>\r\n                <Button variant=\"outline-success\" onClick={addProject}>Add Project</Button>\r\n                <hr></hr>\r\n                \r\n            </div>\r\n\r\n            {/* Projcets Grid*/}\r\n            <Container className='ProjctsGrid'>  \r\n                {projectsList.map(({ projectName, projectDesc }) => (\r\n                    <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>{projectName}</Card.Title>\r\n                                <Card.Text>\r\n                                {projectDesc}\r\n                                </Card.Text>\r\n                                <Button variant=\"primary\">Open</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    </Row> \r\n                ))}    \r\n            </Container>\r\n\r\n\r\n            {/* Adding Projcet Form*/}\r\n            <Modal size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={show} onHide={handleClose}>\r\n                <Form noValidate validated={formValidated} onSubmit={submitProject}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Project</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        {/* ProjectName */}\r\n                        <Form.Group controlId=\"projectName\">\r\n                            <Form.Label>Projcet Name</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder={\"Insert Name\"} />\r\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please enter a project description.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        {/* Description */}\r\n                        <Form.Group controlId=\"projectDescription\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Description\" />   \r\n                        </Form.Group>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\" >\r\n                            Add\r\n                        </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            \r\n        </div>\r\n        </div>     \r\n    )}\r\nexport default Home"]},"metadata":{},"sourceType":"module"}