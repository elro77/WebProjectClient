{"ast":null,"code":"import axios from 'axios';\nimport { SetUser } from '../components/Navigator';\nimport { global_setData } from '../components/Todo';\nconst baseUrl = 'http://localhost:3001';\nexport let data = {\n  username: \"\",\n  password: \"\",\n  lists: \"[]\"\n};\nexport function signIn(username, password, onSuccess, onFailure) {\n  data = {\n    username: \"\",\n    password: \"\",\n    lists: \"[]\"\n  };\n  const request = axios.get(`${baseUrl}/api/login/:${username}/:${password}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure();\n      SetUser({\n        name: \"guest\",\n        isLog: false\n      });\n    } else {\n      onSuccess(username);\n      SetUser({\n        name: username,\n        isLog: true\n      });\n      data = response.data;\n      global_setData(response.data);\n    }\n  }).catch(error => console.log(error));\n}\nexport function register(username, password, onSuccess, onFailure) {\n  const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure();\n    } else {\n      onSuccess(username);\n    }\n  }).catch(error => console.log(error));\n}\nexport function addProject(userName, projectName, projectDesc, onSuccess, onFailure) {\n  console.log(\"serverCom addProjectToDB\"); //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\n\n  const request = axios.post(`${baseUrl}/api/addProject/:${userName}/:${projectName}/:${projectDesc}`, {\n    crossdomain: true\n  });\n  return request.then(response => {\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure();\n    } else {\n      onSuccess(userName);\n    }\n  }).catch(error => console.log(error));\n}\nexport function update(user, onSuccess, onFailure) {\n  console.log(\"update\");\n  const request = axios.put(`${baseUrl}/api/update/user`, JSON.stringify(user), {\n    headers: {\n      // Overwrite Axios's automatically set Content-Type\n      'Content-Type': 'application/json'\n    }\n  });\n  return request.then(response => {\n    console.log(response.data);\n\n    if (response.data == null) {\n      onFailure();\n    } else {\n      onSuccess();\n    }\n  }).catch(error => console.log(error));\n}","map":{"version":3,"sources":["C:/Web_Project/client/src/services/serverCom.js"],"names":["axios","SetUser","global_setData","baseUrl","data","username","password","lists","signIn","onSuccess","onFailure","request","get","crossdomain","then","response","console","log","name","isLog","catch","error","register","post","addProject","userName","projectName","projectDesc","update","user","put","JSON","stringify","headers"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nimport {SetUser} from '../components/Navigator'; \r\nimport {global_setData} from '../components/Todo'; \r\n\r\nconst baseUrl = 'http://localhost:3001'\r\nexport let data={username:\"\",password:\"\",lists:\"[]\"}\r\nexport function signIn(username,password,onSuccess,onFailure) {\r\n    data={username:\"\",password:\"\",lists:\"[]\"}\r\n    const request = axios.get(`${baseUrl}/api/login/:${username}/:${password}`,  { crossdomain: true })\r\n        return request.then((response) => {\r\n        console.log(response.data)\r\n        if (response.data==null)\r\n        {\r\n            onFailure()\r\n            SetUser({name:\"guest\",isLog:false})\r\n        }\r\n        else\r\n        {\r\n            \r\n            onSuccess(username)\r\n            SetUser({name:username,isLog:true})\r\n            data=response.data\r\n            global_setData(response.data)\r\n            \r\n           \r\n        }\r\n        \r\n        \r\n\r\n    }).catch(error => console.log(error))\r\n  }\r\n\r\n\r\n  export function register(username,password,onSuccess,onFailure) {\r\n    const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\r\n    return request.then((response) => {\r\n        console.log(response.data)\r\n        if (response.data==null)\r\n        {\r\n            onFailure()\r\n        }\r\n        else\r\n        {\r\n            onSuccess(username)\r\n        }\r\n    }).catch(error => console.log(error))\r\n  \r\n    }\r\n\r\n\r\n    export function addProject(userName,projectName,projectDesc,onSuccess,onFailure) {\r\n      console.log(\"serverCom addProjectToDB\") \r\n      //const request = axios.post(`${baseUrl}/api/register/:${username}/:${password}`,  { crossdomain: true })\r\n      const request = axios.post(`${baseUrl}/api/addProject/:${userName}/:${projectName}/:${projectDesc}`,  { crossdomain: true })\r\n      return request.then((response) => {\r\n          console.log(response.data)\r\n          if (response.data==null)\r\n          {\r\n              onFailure()\r\n          }\r\n          else\r\n          {\r\n              onSuccess(userName)\r\n          }\r\n      }).catch(error => console.log(error))\r\n    \r\n      }\r\n\r\n\r\n    export function update(user,onSuccess,onFailure) {\r\n        console.log(\"update\")\r\n        const request = axios.put(`${baseUrl}/api/update/user`,JSON.stringify(user),\r\n        {headers: {\r\n          // Overwrite Axios's automatically set Content-Type\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        return request.then((response) => {\r\n            console.log(response.data)\r\n            if (response.data==null)\r\n            {\r\n                onFailure()\r\n            }\r\n            else\r\n            {\r\n                onSuccess()\r\n            }\r\n        }).catch(error => console.log(error))\r\n      }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n      \r\n  \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}